/*=============================================================================
 Copyright (c) 2011-12 Broadcom Europe Limited.
 All rights reserved.

 Module   :  Hardware video decoder

 FILE DESCRIPTION
 vdec3 internal error definitions for H.264
===============================================================================*/

#ifndef H264_ERRORS_H
#define H264_ERRORS_H

/***************************************************************************//**
\file
Define H.264 internal error numbers.

Errors are structured, and contain components for severity, module, type,
and individual error number. Severity indicates fatal, error, retry, or
info (including OK). See vd3_errors.h for encoding.
********************************************************************************/

#include "vd3_errors.h"

/* H.264 parsing errors */
#define H264PARSE_SYNTAX(severity,n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264PARSE, ERROR_TYPE_SYNTAX, n)
#define H264PARSE_LIMIT(severity,n)  ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264PARSE, ERROR_TYPE_LIMIT,  n)

#define ERROR_H264_TRUNCATED_NAL                    H264PARSE_SYNTAX(ERROR, 1)
#define ERROR_H264_EXCESS_NAL_DATA                  H264PARSE_SYNTAX(INFO,  2)
#define ERROR_H264_NAL_UNSPECIFIED                  H264PARSE_SYNTAX(INFO,  3)
#define ERROR_H264_NAL_RESERVED                     H264PARSE_SYNTAX(INFO,  4)
#define ERROR_H264_NAL_METADATA                     H264PARSE_SYNTAX(INFO,  5)
#define ERROR_H264_SVC_MVC_UNSUPPORTED              H264PARSE_SYNTAX(INFO,  6)

/*   in Slice Header */
#define ERROR_H264_INVALID_FIRST_MB                 H264PARSE_LIMIT (ERROR, 10)
#define ERROR_H264_INVALID_SLICE_TYPE               H264PARSE_SYNTAX(ERROR, 11)
#define ERROR_H264_INVALID_COLOUR_PLANE_ID          H264PARSE_SYNTAX(ERROR, 12)
#define ERROR_H264_INVALID_IDR_PIC_ID               H264PARSE_SYNTAX(ERROR, 13)
#define ERROR_H264_INVALID_REDUNDANT_PIC_CNT        H264PARSE_SYNTAX(ERROR, 14)

#define ERROR_H264_INVALID_SLICE_NUM_REF_IDX        H264PARSE_SYNTAX(ERROR, 20)
#define ERROR_H264_INVALID_LOG2_WEIGHT_DENOM        H264PARSE_SYNTAX(ERROR, 21)
#define ERROR_H264_INVALID_PRED_WEIGHT              H264PARSE_SYNTAX(ERROR, 22)
#define ERROR_H264_INVALID_PRED_OFFSET              H264PARSE_SYNTAX(ERROR, 23)
#define ERROR_H264_INVALID_MMC_OP                   H264PARSE_SYNTAX(ERROR, 24)
#define ERROR_H264_TRUNCATED_MMC_LIST               H264PARSE_LIMIT (ERROR, 25)
#define ERROR_H264_INVALID_MMC_PICNUM               H264PARSE_SYNTAX(ERROR, 26)
#define ERROR_H264_INVALID_MMC_INDEX                H264PARSE_SYNTAX(ERROR, 27)
#define ERROR_H264_INVALID_CABAC_INIT_IDC           H264PARSE_SYNTAX(ERROR, 28)
#define ERROR_H264_INVALID_SLICE_QP_DELTA           H264PARSE_SYNTAX(ERROR, 29)
#define ERROR_H264_INVALID_SLICE_QS_DELTA           H264PARSE_SYNTAX(ERROR, 30)
#define ERROR_H264_INVALID_DISABLE_DEBLOCK_IDC      H264PARSE_SYNTAX(ERROR, 31)
#define ERROR_H264_INVALID_DISABLE_DEBLOCK_PARAM    H264PARSE_SYNTAX(ERROR, 32)
#define ERROR_H264_INVALID_SLICE_GROUP_CYCLE        H264PARSE_SYNTAX(ERROR, 33)
#define ERROR_H264_INVALID_MOD_PICNUM_IDC           H264PARSE_SYNTAX(ERROR, 34)
#define ERROR_H264_TRUNCATED_MOD_PICNUM_LIST        H264PARSE_LIMIT (ERROR, 35)

/* In slice partitions */
#define ERROR_H264_INVALID_SLICE_ID                 H264PARSE_LIMIT (ERROR, 36)
#define ERROR_INVALID_REDUNDANT_PIC_CNT             H264PARSE_LIMIT (ERROR, 37)

/*   in SPS */
#define ERROR_H264_UNKNOWN_PROFILE                  H264PARSE_SYNTAX(ERROR, 40)
#define ERROR_H264_INVALID_SPS_ID                   H264PARSE_SYNTAX(ERROR, 41)
#define ERROR_H264_INVALID_CHROMA_FMT               H264PARSE_SYNTAX(ERROR, 42)
#define ERROR_H264_INVALID_BIT_DEPTH_LUMA           H264PARSE_LIMIT (ERROR, 43)
#define ERROR_H264_INVALID_BIT_DEPTH_CHROMA         H264PARSE_LIMIT (ERROR, 44)
#define ERROR_H264_INVALID_LOG2_MAX_FRAME_NUM       H264PARSE_SYNTAX(ERROR, 45)
#define ERROR_H264_INVALID_POC_TYPE                 H264PARSE_SYNTAX(ERROR, 46)
#define ERROR_H264_INVALID_POC_LSB_BITS             H264PARSE_SYNTAX(ERROR, 47)
#define ERROR_H264_INVALID_POC_NUM_REF_FRAMES       H264PARSE_SYNTAX(ERROR, 48)
#define ERROR_H264_INVALID_MAX_NUM_REF_FRAMES       H264PARSE_LIMIT (ERROR, 49)
#define ERROR_H264_INVALID_PIC_WIDTH                H264PARSE_LIMIT (ERROR, 50)
#define ERROR_H264_INVALID_PIC_HEIGHT               H264PARSE_LIMIT (ERROR, 51)
#define ERROR_H264_INVALID_CROP_OFFSET              H264PARSE_LIMIT (ERROR, 52)

/*   in Scaling List */
#define ERROR_H264_INVALID_DELTA_SCALE              H264PARSE_SYNTAX(ERROR, 60)

/*   in VUI */
#define ERROR_H264_INVALID_CHROMA_LOC               H264PARSE_SYNTAX(ERROR, 70)
#define ERROR_H264_INVALID_MAX_BYTES_PER_PIC_DENOM  H264PARSE_SYNTAX(ERROR, 71)
#define ERROR_H264_INVALID_MAX_BITS_PER_MB_DENOM    H264PARSE_SYNTAX(ERROR, 72)
#define ERROR_H264_INVALID_MAX_MV_LENGTH            H264PARSE_SYNTAX(ERROR, 73)
#define ERROR_H264_INVALID_NUM_REORDER_FRAMES       H264PARSE_LIMIT (ERROR, 74)
#define ERROR_H264_INVALID_MAX_DEC_FRAME_BUFFERING  H264PARSE_LIMIT (ERROR, 75)

/*   in HRD */
#define ERROR_H264_INVALID_CPB_CNT                  H264PARSE_SYNTAX(ERROR, 80)

/*   in SPS extension */
#define ERROR_H264_INVALID_BIT_DEPTH_AUX            H264PARSE_SYNTAX(ERROR, 90)

/*   in PPS */
#define ERROR_H264_INVALID_PPS_ID                   H264PARSE_SYNTAX(ERROR, 100)
#define ERROR_H264_INVALID_NUM_SLICE_GROUPS         H264PARSE_SYNTAX(ERROR, 101)
#define ERROR_H264_INVALID_SLICE_GROUP_MAP_TYPE     H264PARSE_SYNTAX(ERROR, 102)
#define ERROR_H264_INVALID_SLICE_GROUP_RUN_LENGTH   H264PARSE_LIMIT (ERROR, 103)
#define ERROR_H264_INVALID_SLICE_GROUP_COORD        H264PARSE_LIMIT (ERROR, 104)
#define ERROR_H264_INVALID_SLICE_GROUP_CHANGE_RATE  H264PARSE_LIMIT (ERROR, 105)
#define ERROR_H264_INVALID_PIC_SIZE_IN_MAP_UNITS    H264PARSE_LIMIT (ERROR, 106)
#define ERROR_H264_INVALID_NUM_REF_IDX              H264PARSE_SYNTAX(ERROR, 107)
#define ERROR_H264_INVALID_PIC_INIT_QP              H264PARSE_SYNTAX(ERROR, 108)
#define ERROR_H264_INVALID_PIC_INIT_QS              H264PARSE_SYNTAX(ERROR, 109)
#define ERROR_H264_INVALID_CHROMA_QP_INDEX_OFFSET   H264PARSE_SYNTAX(ERROR, 110)

/*   in SEI */
#define ERROR_H264_INVALID_TIMESTAMP                H264PARSE_LIMIT (ERROR, 120)
#define ERROR_H264_INVALID_SUBSEQ_LAYER             H264PARSE_LIMIT (ERROR, 121)
#define ERROR_H264_INVALID_SUBSEQ_ID                H264PARSE_LIMIT (ERROR, 122)
#define ERROR_H264_INVALID_SUBSEQ_COUNT             H264PARSE_LIMIT (ERROR, 123)
#define ERROR_H264_INVALID_SUBSEQ_LAYER_COUNT       H264PARSE_LIMIT (ERROR, 124)

/*   in NAL header extensions */
#define ERROR_H264_INVALID_INTER_LAYER_PRED         H264PARSE_SYNTAX(ERROR, 150)
#define ERROR_H264_INVALID_DEPENDENCY_ID            H264PARSE_SYNTAX(ERROR, 151)
#define ERROR_H264_INVALID_RESERVED_THREE_2BITS     H264PARSE_SYNTAX(ERROR, 152)
#define ERROR_H264_INVALID_ANCHOR_PIC_FLAG          H264PARSE_SYNTAX(ERROR, 153)
#define ERROR_H264_INVALID_RESERVED_ONE_BIT         H264PARSE_SYNTAX(ERROR, 154)

/* H.264 SPS/PPS storage errors */
#define H264SPS_ALLOC(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264SPS, ERROR_TYPE_ALLOC, n)
#define H264SPS_STATE(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264SPS, ERROR_TYPE_STATE, n)
#define H264SPS_UNDEF(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264SPS, ERROR_TYPE_UNDEFINED, n)

#define ERROR_H264_SPS_ALLOC                        H264SPS_ALLOC(ERROR, 1)
#define ERROR_H264_SPS_REALLOC                      H264SPS_ALLOC(ERROR, 2)
#define ERROR_H264_SPS_LOOKUP_BAD_SPS_ID            H264SPS_ALLOC(ERROR, 3)
#define ERROR_H264_SPS_LOOKUP_UNDEFINED             H264SPS_UNDEF(ERROR, 4)
#define ERROR_H264_SPS_ACTIVE_REDEFINED             H264SPS_STATE(INFO,  5)
#define ERROR_H264_SPS_NOT_SAVED                    H264SPS_ALLOC(INFO,  6)

#define ERROR_H264_PPS_ALLOC                        H264SPS_ALLOC(ERROR, 11)
#define ERROR_H264_PPS_REALLOC                      H264SPS_ALLOC(ERROR, 12)
#define ERROR_H264_PPS_LOOKUP_BAD_PPS_ID            H264SPS_ALLOC(ERROR, 13)
#define ERROR_H264_PPS_LOOKUP_UNDEFINED             H264SPS_UNDEF(ERROR, 14)
#define ERROR_H264_PPS_NOT_SAVED                    H264SPS_ALLOC(INFO,  15)


/* H.264 categoriser errors */
#define H264CAT_ALLOC(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264CAT, ERROR_TYPE_ALLOC, n)
#define H264CAT_STATE(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264CAT, ERROR_TYPE_STATE, n)
#define H264CAT_LIMIT(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264CAT, ERROR_TYPE_LIMIT, n)

#define ERROR_H264_CAT_UNSUPPORTED_SLICE_TYPE       H264CAT_LIMIT(ERROR, 4)
#define ERROR_H264_CAT_NOT_IN_PICTURE               H264CAT_STATE(RETRY, 6)
#define ERROR_H264_CAT_UNKNOWN_REDUNDANT_PIC        H264CAT_STATE(RETRY, 8)
#define ERROR_H264_CAT_UNSUPPORTED_BIT_DEPTH        H264CAT_LIMIT(ERROR, 9)
#define ERROR_H264_CAT_UNSUPPORTED_CHROMA_FORMAT    H264CAT_LIMIT(ERROR, 10)
#define ERROR_H264_CAT_RCP_DISABLED                 H264CAT_STATE(INFO,  11)
#define ERROR_H264_CAT_ACP_DISABLED                 H264CAT_STATE(INFO,  12)
#define ERROR_H264_CAT_ACP_UNPARSEABLE              H264CAT_STATE(ERROR, 13)

/* H.264 DPB errors */
#define H264DPB_GENERAL(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264DPB, ERROR_TYPE_GENERAL, n)
#define H264DPB_ALLOC(severity, n)   ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264DPB, ERROR_TYPE_ALLOC, n)
#define H264DPB_SYNTAX(severity, n)  ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264DPB, ERROR_TYPE_SYNTAX, n)

#define ERROR_H264_DPB_IMAGE_ALLOCATOR_FAIL   H264DPB_ALLOC(ERROR, 2)
#define ERROR_H264_DPB_IMAGE_ALLOCATOR_DENY   H264DPB_ALLOC(ERROR, 3)
#define ERROR_H264_DPB_ALLOC_DM_STORAGE_FAILED     H264DPB_ALLOC(ERROR, 4)
#define ERROR_H264_DPB_RESIZE_DM_STORAGE_FAILED    H264DPB_ALLOC(ERROR, 5)
#define ERROR_H264_DPB_INVALID_REORDER_LIMIT       H264DPB_SYNTAX(ERROR, 6)
#define ERROR_H264_DPB_INVALID_MAX_DPB_FRAMES_LIMIT     H264DPB_SYNTAX(ERROR, 7)

/* H.264 MB loop errors */
#define H264MBLOOP_LIMIT(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264MBLOOP, ERROR_TYPE_LIMIT, n)
#define H264MBLOOP_GENERAL(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264MBLOOP, ERROR_TYPE_GENERAL, n)

#define ERROR_H264_MB_OUT_OF_RANGE H264MBLOOP_LIMIT(ERROR, 1)

#define ERROR_H264_MBLOOP_TOP_CTX_CREATE_FAIL H264MBLOOP_GENERAL(ERROR, 6)
#define ERROR_H264_MBLOOP_NO_SLICES H264MBLOOP_GENERAL(ERROR, 7)
#define ERROR_H264_MBLOOP_CABAC_AND_FMO H264MBLOOP_GENERAL(ERROR,8)
#define ERROR_H264_MBLOOP_CABAC_AND_DP H264MBLOOP_GENERAL(ERROR,9)
#define ERROR_H264_UNSUPPORTED_SLICE_MODE_FEATURE H264MBLOOP_GENERAL(ERROR, 10)
#define ERROR_H264_OUT_OF_ORDER_SLICE H264MBLOOP_GENERAL(ERROR, 11)
#define ERROR_H264_MBLOOP_DUMMY_PARTITION_CREATE_FAIL H264MBLOOP_GENERAL(ERROR, 12)

/* H264 CABAC errors */
#define H264CABAC_ALLOC(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264CABAC, ERROR_TYPE_ALLOC, n)
#define H264CABAC_GENERAL(severity, n) ERROR_MAKE(ERROR_SEVERITY_##severity, CODEC_MODULE_H264CABAC, ERROR_TYPE_GENERAL, n)

#define ERROR_CABAC_ALLOC_OUTBUF_FAILED             H264CABAC_ALLOC(ERROR, 1)
#define ERROR_CABAC_OPEN_DRIVER_FAILED              H264CABAC_GENERAL(ERROR, 2)
#define ERROR_CABAC_ALLOC_CONTEXT_FAILED            H264CABAC_ALLOC(ERROR, 3)

#endif /* H264_ERRORS_H */

/* End of file */
/*-----------------------------------------------------------------------------*/
